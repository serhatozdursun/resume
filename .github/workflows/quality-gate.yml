name: Code Quality (Tests + SonarCloud + AI Review)

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install deps
        run: yarn install --frozen-lockfile

      - name: Run unit tests (with coverage)
        run: yarn test --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@ffc3010689be73b8e5ae0c57ce35968afd7909e8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Optional: upload HTML coverage report for reviewers
      - name: Upload coverage report
        if: github.event_name == 'pull_request' && success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage/lcov-report
          if-no-files-found: ignore

      # AI review runs in SAME job â†’ can read coverage/lcov.info directly
      - name: Run AI coverage-aware review
        if: github.event_name == 'pull_request'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          # Optional: pass these; your dangerfile already has sane defaults
          MIN_FILE_COVERAGE: ${{ secrets.MIN_FILE_COVERAGE }}
          MAX_FILES_TO_ANALYZE: ${{ secrets.MAX_FILES_TO_ANALYZE }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
        run: npx danger ci --dangerfile dangerfile.ts
