name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Set Maintenance Mode
  set_maintenance:
    runs-on: ubuntu-latest
    steps:
      - name: Set maintenance mode
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the /var/www directory
            cd ~ || exit 1
            cd .. || exit 1
            # Create the maintenance flag
            touch /var/www/maintenance.flag
            echo "Maintenance mode enabled."

  # Job 2: Stop the server and fetch the latest code
  stop_server:
    runs-on: ubuntu-latest
    needs: set_maintenance
    steps:
      - name: Stop the server and fetch the latest code
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            TARGET_DIR="repo/resume"
            cd ~ || exit 1
            cd $TARGET_DIR || exit 1

            export PATH=/root/.nvm/versions/node/v23.6.0/bin:$PATH
            nvm alias default 23

            pm2 stop so-website || true
            PID=$(sudo netstat -tulnp | grep :3000 | awk '{print $7}' | cut -d'/' -f1)
            if [ -n "$PID" ]; then
              sudo kill -9 $PID
            fi
            rm -rf .next || true
            git pull origin main || exit 1

  # Job 3: Build the app
  build:
    runs-on: ubuntu-latest
    needs: stop_server
    steps:
      - name: Build the app
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            TARGET_DIR="repo/resume"
            cd ~ || exit 1
            cd $TARGET_DIR || exit 1

            export PATH=/root/.nvm/versions/node/v23.6.0/bin:$PATH
            nvm alias default 23

            if yarn install; then
              echo "Dependencies installed successfully."
            else
              echo "Failed to install dependencies."
              exit 1
            fi
            if yarn build; then
              echo "App built successfully."
            else
              echo "Failed to build the app."
              exit 1
            fi

  # Job 4: Start the server
  start_server:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Start the app
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export PATH=/root/.nvm/versions/node/v23.6.0/bin:$PATH
            export PATH=/root/.nvm/versions/node/v23.6.0/bin/pm2:$PATH
            nvm alias default 23

            TARGET_DIR="repo/resume"
            cd ~ || exit 1
            cd $TARGET_DIR || exit 1

            # Ensure PM2 is installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            # Start the app with PM2
            if pm2 start yarn --name "so-website" -- start; then
              echo "PM2 process 'so-website' started successfully."
            else
              echo "Failed to start the pm2 process."
              exit 1
            fi
            if pm2 save; then
              echo "PM2 process list saved successfully."
            else
              echo "Failed to save the PM2 process list."
              exit 1
            fi

  # Job 5: Disable Maintenance Mode
  disable_maintenance:
    runs-on: ubuntu-latest
    needs: start_server
    steps:
      - name: Disable maintenance mode
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Navigate to the /var/www directory
            cd ~ || exit 1
            cd .. || exit 1
            # Remove the maintenance flag
            rm -f /var/www/maintenance.flag
            echo "Maintenance mode disabled."
