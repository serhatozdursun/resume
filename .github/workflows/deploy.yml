name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Set Maintenance Mode
  set_maintenance:
    runs-on: ubuntu-latest
    steps:
      - name: Set maintenance mode
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /var/www
            sudo touch /var/www/maintenance.flag
            echo "Maintenance mode enabled."

  # Job 2: Stop the server and fetch the latest code
  stop_server:
    runs-on: ubuntu-latest
    needs: set_maintenance
    steps:
      - name: Stop the server and fetch the latest code
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            TARGET_DIR="repo/resume"
            cd ~ || exit 1
            cd "$TARGET_DIR" || exit 1

            # Load nvm
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

            # Use Node 22 LTS
            nvm install 22
            nvm use 22
            nvm alias default 22

            # Stop app
            pm2 stop so-website || true
            PID=$(sudo ss -ltnp | awk '$4 ~ /:3000$/ {print $6}' | cut -d',' -f2 | cut -d'=' -f2 | head -n1)
            if [ -n "$PID" ]; then
              sudo kill -9 "$PID" || true
            fi

            rm -rf .next || true

            # Reset repo to remote main
            git fetch origin main
            git reset --hard origin/main
            git clean -fdx
            echo "Repository synced to origin/main."

  # Job 3: Build the app
  build:
    runs-on: ubuntu-latest
    needs: stop_server
    steps:
      - name: Build the app
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f
        env:
          NEXT_PUBLIC_EMAILJS_SERVICE_ID: ${{ secrets.NEXT_PUBLIC_EMAILJS_SERVICE_ID }}
          NEXT_PUBLIC_EMAILJS_TEMPLATE_ID: ${{ secrets.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID }}
          NEXT_PUBLIC_EMAILJS_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_EMAILJS_PUBLIC_KEY }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: NEXT_PUBLIC_EMAILJS_SERVICE_ID,NEXT_PUBLIC_EMAILJS_TEMPLATE_ID,NEXT_PUBLIC_EMAILJS_PUBLIC_KEY
          script: |
            TARGET_DIR="repo/resume"
            cd ~ || exit 1
            cd "$TARGET_DIR" || exit 1

            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm use 22

            export NEXT_PUBLIC_EMAILJS_SERVICE_ID=$NEXT_PUBLIC_EMAILJS_SERVICE_ID
            export NEXT_PUBLIC_EMAILJS_TEMPLATE_ID=$NEXT_PUBLIC_EMAILJS_TEMPLATE_ID
            export NEXT_PUBLIC_EMAILJS_PUBLIC_KEY=$NEXT_PUBLIC_EMAILJS_PUBLIC_KEY

            set -euo pipefail
            for v in NEXT_PUBLIC_EMAILJS_SERVICE_ID NEXT_PUBLIC_EMAILJS_TEMPLATE_ID NEXT_PUBLIC_EMAILJS_PUBLIC_KEY; do
              if [ -z "${!v:-}" ]; then echo "ERROR: $v is empty"; exit 1; fi
            done
            case "$NEXT_PUBLIC_EMAILJS_TEMPLATE_ID" in template_*) :;; *) echo "Bad template id"; exit 1;; esac


            yarn install --frozen-lockfile
            yarn build
            echo "App built successfully."
  # Job 4: Start the server
  start_server:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Start the app
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            TARGET_DIR="repo/resume"
            cd ~ || exit 1
            cd "$TARGET_DIR" || exit 1

            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm use 22

            corepack enable

            export NEXT_PUBLIC_EMAILJS_SERVICE_ID="$NEXT_PUBLIC_EMAILJS_SERVICE_ID"
            export NEXT_PUBLIC_EMAILJS_TEMPLATE_ID="$NEXT_PUBLIC_EMAILJS_TEMPLATE_ID"
            export NEXT_PUBLIC_EMAILJS_PUBLIC_KEY="$NEXT_PUBLIC_EMAILJS_PUBLIC_KEY"

            for v in NEXT_PUBLIC_EMAILJS_SERVICE_ID NEXT_PUBLIC_EMAILJS_TEMPLATE_ID NEXT_PUBLIC_EMAILJS_PUBLIC_KEY; do
              if [ -z "${!v:-}" ]; then echo "ERROR: $v is empty"; exit 1; fi
            done
            case "$NEXT_PUBLIC_EMAILJS_TEMPLATE_ID" in template_*) :;; *) echo "Bad template id"; exit 1;; esac

            yarn install --frozen-lockfile
            yarn build
            echo "App built successfully."

  # Job 5: Disable Maintenance Mode (always runs)
  disable_maintenance:
    runs-on: ubuntu-latest
    needs:
      - set_maintenance
      - stop_server
      - build
      - start_server
    if: ${{ always() }}
    steps:
      - name: Disable maintenance mode
        uses: appleboy/ssh-action@2ead5e36573f08b82fbfce1504f1a4b05a647c6f # v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo rm -f /var/www/maintenance.flag || true
            echo "Maintenance mode disabled."
